var React = require('react')

var Heart = module.exports = React.createClass({
    propTypes: {
    animation: React.PropTypes.arrayOf(React.PropTypes.string),
    author: React.PropTypes.shape({
      link: React.PropTypes.string.isRequired,
      name: React.PropTypes.string.isRequired
    }),
    heart: React.PropTypes.string.isRequired,
    made: React.PropTypes.string.isRequired
  }
  , getDefaultProps: function() {
    return {
      made: 'Made',
      heart: 'â™¥'
    }
  }
  , render: function(){
    var author = this.props.author ?
          <Author link={this.props.author.link}>{this.props.author.name}</Author>
          : null
    var authors = this.props.authors ?
          <Authors list={this.props.authors} /> 
          : null

    return (
      <p className="hrt">
        <Word>{this.props.made}</Word>
          with
        <Icon animation={this.props.animation}>{this.props.heart}</Icon>
        {author || authors}
      </p>
    )
  }
})

var Word = React.createClass({
  propTypes: {
    children: React.PropTypes.string.isRequired
  },
  render: function(){
    return (
      <span className="hrt_made">{this.props.children}</span>
    )
  }
})

var Icon = React.createClass({
  propTypes: {
    animation: React.PropTypes.arrayOf(React.PropTypes.string),
    children: React.PropTypes.string.isRequired
  },
  render: function(){
    var _class = ["hrt_heart"]
      .concat(this.props.animation)
      .join(" ")
      .replace('hrt-beating', 'hrt_heart--beating')

    return (
      <span className={_class}>{this.props.children}</span>
    )
  }
})

var Author = React.createClass({
  propTypes: {
    link: React.PropTypes.string.isRequired,
    children: React.PropTypes.string.isRequired
  },
  render: function(){
    return (
      <span className="hrt_author">by
        <a href={this.props.link}>
          {this.props.children}
        </a>
      </span>
    )
  }
})

var Authors = React.createClass({
  render: function(){
    
    var numOfAuthors = this.props.list.length
    var authors = this.props.list.reduce(function(acc, a, i, list){
      if(i == numOfAuthors - 1)
        return acc.concat(
          <span>and <a href={a.link}>{a.name}</a></span>
        )
      else if(i == 0) return acc.concat(<a href={a.link}>{a.name}</a>)
      else return acc.concat(<span>, <a href={a.link}>{a.name}</a></span>)
    }, [])
    
    return (
      <span className="hrt_author">by
        {authors}
      </span>
    )
  }
})
